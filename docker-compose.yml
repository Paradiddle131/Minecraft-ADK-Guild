version: '3.8'

services:
  # Minecraft Server
  minecraft:
    image: itzg/minecraft-server:latest
    container_name: minecraft-multiagent
    ports:
      - "25565:25565"
      - "25575:25575"  # RCON port
    environment:
      EULA: "TRUE"
      TYPE: "VANILLA"
      VERSION: "1.21"
      MEMORY: "2G"
      SPAWN_PROTECTION: 0
      MAX_PLAYERS: 10
      ENABLE_RCON: "true"
      RCON_PASSWORD: "minecraft"
      RCON_PORT: 25575
      ONLINE_MODE: "false"  # Allow offline mode for bots
      DIFFICULTY: "peaceful"
      GAMEMODE: "creative"
      SPAWN_MONSTERS: "false"
      SPAWN_ANIMALS: "true"
      VIEW_DISTANCE: 10
      # Logging verbosity options
      DEBUG: "TRUE"  # Enables verbose container startup logging
      ENABLE_ROLLING_LOGS: "TRUE"  # Enables rolling log files
      JVM_OPTS: "-Dlog4j.configurationFile=/data/log4j2.xml"  # Custom log4j config
    volumes:
      - minecraft_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mc-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # Redis for state persistence
  redis:
    image: redis:7-alpine
    container_name: minecraft-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: minecraft-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped

  # Grafana for monitoring dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: minecraft-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    depends_on:
      - prometheus

  # Optional: Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: minecraft-node-exporter
    ports:
      - "9100:9100"
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host:ro

volumes:
  minecraft_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: minecraft-network
